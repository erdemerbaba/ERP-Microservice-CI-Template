version: "3.9"

services:

  user-service:
    image: 'user-service:latest'
    build:
      context: ./user-service
    container_name: user-service
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      - server.port=8080
      - spring.data.mongodb.host=mongodb
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.database=userdb
    depends_on:
      - database
    networks:
      - ERPNetwork



  products-service:
    image: 'products-service:latest'
    build:
      context: ./products-service
    container_name: products-service
    restart: on-failure
    ports:
      - "8070:8070"
    environment:
      - server.port=8070
      - spring.data.mongodb.host=mongodb
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.database=userdb
    depends_on:
      - database
    networks:
      - ERPNetwork

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - ERPNetwork

  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - ERPNetwork

  mongodb:
    image: "mongo:latest"
    container_name: mongo-container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - ERPNetwork


volumes:
  mongodb_data_container:


networks:
  ERPNetwork: